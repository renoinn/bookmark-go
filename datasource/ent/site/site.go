// Code generated by ent, DO NOT EDIT.

package site

const (
	// Label holds the string label denoting the site type in the database.
	Label = "site"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// EdgeBookmarkFrom holds the string denoting the bookmark_from edge name in mutations.
	EdgeBookmarkFrom = "bookmark_from"
	// Table holds the table name of the site in the database.
	Table = "sites"
	// BookmarkFromTable is the table that holds the bookmark_from relation/edge.
	BookmarkFromTable = "bookmarks"
	// BookmarkFromInverseTable is the table name for the Bookmark entity.
	// It exists in this package in order to avoid circular dependency with the "bookmark" package.
	BookmarkFromInverseTable = "bookmarks"
	// BookmarkFromColumn is the table column denoting the bookmark_from relation/edge.
	BookmarkFromColumn = "site_id"
)

// Columns holds all SQL columns for site fields.
var Columns = []string{
	FieldID,
	FieldURL,
	FieldTitle,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// URLValidator is a validator for the "url" field. It is called by the builders before save.
	URLValidator func(string) error
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
)
