// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BookmarksColumns holds the columns for the "bookmarks" table.
	BookmarksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "url", Type: field.TypeString, Size: 2048},
		{Name: "title", Type: field.TypeString, Size: 100},
		{Name: "note", Type: field.TypeString, Size: 1000},
		{Name: "user_id", Type: field.TypeInt},
	}
	// BookmarksTable holds the schema information for the "bookmarks" table.
	BookmarksTable = &schema.Table{
		Name:       "bookmarks",
		Columns:    BookmarksColumns,
		PrimaryKey: []*schema.Column{BookmarksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bookmarks_users_bookmarks",
				Columns:    []*schema.Column{BookmarksColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "count", Type: field.TypeInt, Default: 0},
		{Name: "user_id", Type: field.TypeInt},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tags_users_tags",
				Columns:    []*schema.Column{TagsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 100},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// BookmarkTagsColumns holds the columns for the "bookmark_tags" table.
	BookmarkTagsColumns = []*schema.Column{
		{Name: "bookmark_id", Type: field.TypeInt},
		{Name: "tag_id", Type: field.TypeInt},
	}
	// BookmarkTagsTable holds the schema information for the "bookmark_tags" table.
	BookmarkTagsTable = &schema.Table{
		Name:       "bookmark_tags",
		Columns:    BookmarkTagsColumns,
		PrimaryKey: []*schema.Column{BookmarkTagsColumns[0], BookmarkTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bookmark_tags_bookmark_id",
				Columns:    []*schema.Column{BookmarkTagsColumns[0]},
				RefColumns: []*schema.Column{BookmarksColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "bookmark_tags_tag_id",
				Columns:    []*schema.Column{BookmarkTagsColumns[1]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BookmarksTable,
		TagsTable,
		UsersTable,
		BookmarkTagsTable,
	}
)

func init() {
	BookmarksTable.ForeignKeys[0].RefTable = UsersTable
	TagsTable.ForeignKeys[0].RefTable = UsersTable
	UsersTable.Annotation = &entsql.Annotation{
		Table: "users",
	}
	BookmarkTagsTable.ForeignKeys[0].RefTable = BookmarksTable
	BookmarkTagsTable.ForeignKeys[1].RefTable = TagsTable
}
