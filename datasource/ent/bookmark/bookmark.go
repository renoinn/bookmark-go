// Code generated by ent, DO NOT EDIT.

package bookmark

const (
	// Label holds the string label denoting the bookmark type in the database.
	Label = "bookmark"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldNote holds the string denoting the note field in the database.
	FieldNote = "note"
	// EdgeSite holds the string denoting the site edge name in mutations.
	EdgeSite = "site"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeTag holds the string denoting the tag edge name in mutations.
	EdgeTag = "tag"
	// Table holds the table name of the bookmark in the database.
	Table = "bookmarks"
	// SiteTable is the table that holds the site relation/edge. The primary key declared below.
	SiteTable = "site_bookmark"
	// SiteInverseTable is the table name for the Site entity.
	// It exists in this package in order to avoid circular dependency with the "site" package.
	SiteInverseTable = "sites"
	// UserTable is the table that holds the user relation/edge. The primary key declared below.
	UserTable = "user_bookmark"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// TagTable is the table that holds the tag relation/edge. The primary key declared below.
	TagTable = "bookmark_tag"
	// TagInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid circular dependency with the "tag" package.
	TagInverseTable = "tags"
)

// Columns holds all SQL columns for bookmark fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldNote,
}

var (
	// SitePrimaryKey and SiteColumn2 are the table columns denoting the
	// primary key for the site relation (M2M).
	SitePrimaryKey = []string{"site_id", "bookmark_id"}
	// UserPrimaryKey and UserColumn2 are the table columns denoting the
	// primary key for the user relation (M2M).
	UserPrimaryKey = []string{"user_id", "bookmark_id"}
	// TagPrimaryKey and TagColumn2 are the table columns denoting the
	// primary key for the tag relation (M2M).
	TagPrimaryKey = []string{"bookmark_id", "tag_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// NoteValidator is a validator for the "note" field. It is called by the builders before save.
	NoteValidator func(string) error
)
